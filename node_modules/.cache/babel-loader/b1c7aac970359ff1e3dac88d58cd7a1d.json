{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Personal\\\\Desktop\\\\REACT\\\\appreact\\\\src\\\\components\\\\CartContext\\\\CartContext.js\",\n    _s = $RefreshSig$();\n\n//contexto con las funciones y states globales que se utilizan en los distintos components.\nimport { createContext } from 'react/cjs/react.development';\nimport { useState } from 'react';\nimport itemsprop from '../../public/itemprop'; //creación del contexto\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = createContext();\nexport const ItemsProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Creación y state del array del carrito de compras (Acá van los productos añadidos al mismo solamente)\n  const [carrito, setCarrito] = useState([]); //Función para añadit un producto al carrito\n\n  const addItem = newItem => {\n    const newitemcarrito = carrito.find(item => newItem.id === item.id && newItem.size === item.size && newItem.color === item.color);\n\n    if (newitemcarrito) {\n      newitemcarrito.cantidad = newitemcarrito.cantidad + newItem.cantidad;\n      newitemcarrito.precio = newItem.precio * newitemcarrito.cantidad;\n    } else {\n      carrito.push(newItem);\n    }\n\n    setCarrito([...carrito]);\n  }; //Función para eliminar un producto del carrito\n\n\n  const removeItem = newItem => {\n    const newitemcarrito = carrito.filter(item => item.id !== newItem.id || item.id === newItem.id && newItem.size !== item.size || item.id === newItem.id && newItem.color !== item.color);\n    setCarrito(newitemcarrito);\n  }; //Función para vaciar por completo el carrito\n\n\n  const clear = carrito => {\n    carrito.length = 0;\n    const newcarrito = carrito;\n    setCarrito(newcarrito);\n  }; //provider con los valores que pueden ser utilizados en los demás components.\n\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      addItem,\n      removeItem,\n      clear,\n      carrito,\n      setCarrito\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ItemsProvider, \"P1BaWXIQpOcWXPCAlakQBGCmK7g=\");\n\n_c = ItemsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemsProvider\");","map":{"version":3,"sources":["C:/Users/Personal/Desktop/REACT/appreact/src/components/CartContext/CartContext.js"],"names":["createContext","useState","itemsprop","CartContext","ItemsProvider","children","carrito","setCarrito","addItem","newItem","newitemcarrito","find","item","id","size","color","cantidad","precio","push","removeItem","filter","clear","length","newcarrito"],"mappings":";;;AAAA;AAEA,SAASA,aAAT,QAA8B,6BAA9B;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,uBAAtB,C,CAEA;;;AACA,OAAO,MAAMC,WAAW,GAAGH,aAAa,EAAjC;AAEP,OAAO,MAAMI,aAAa,GAAG,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAExC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAE,EAAF,CAAtC,CAHwC,CAKxC;;AACA,QAAMO,OAAO,GAAIC,OAAD,IAAY;AAExB,UAAMC,cAAc,GAAGJ,OAAO,CAACK,IAAR,CAClBC,IAAD,IACIH,OAAO,CAACI,EAAR,KAAeD,IAAI,CAACC,EAApB,IAA0BJ,OAAO,CAACK,IAAR,KAAiBF,IAAI,CAACE,IAAhD,IAAwDL,OAAO,CAACM,KAAR,KAAkBH,IAAI,CAACG,KAFhE,CAAvB;;AAKA,QAAGL,cAAH,EAAkB;AACdA,MAAAA,cAAc,CAACM,QAAf,GAA0BN,cAAc,CAACM,QAAf,GAA0BP,OAAO,CAACO,QAA5D;AACAN,MAAAA,cAAc,CAACO,MAAf,GAAwBR,OAAO,CAACQ,MAAR,GAAiBP,cAAc,CAACM,QAAxD;AACH,KAHD,MAGK;AACDV,MAAAA,OAAO,CAACY,IAAR,CAAaT,OAAb;AACH;;AACDF,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,CAAD,CAAV;AACH,GAdD,CANwC,CAuBxC;;;AAEA,QAAMa,UAAU,GAAIV,OAAD,IAAY;AAC3B,UAAMC,cAAc,GAAGJ,OAAO,CAACc,MAAR,CAClBR,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAApB,IAA2BD,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAApB,IAA0BJ,OAAO,CAACK,IAAR,KAAiBF,IAAI,CAACE,IAA3E,IAAqFF,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAApB,IAA0BJ,OAAO,CAACM,KAAR,KAAkBH,IAAI,CAACG,KAD7H,CAAvB;AAGAR,IAAAA,UAAU,CAACG,cAAD,CAAV;AACH,GALD,CAzBwC,CAiCxC;;;AACA,QAAMW,KAAK,GAAIf,OAAD,IAAY;AAEtBA,IAAAA,OAAO,CAACgB,MAAR,GAAiB,CAAjB;AACA,UAAMC,UAAU,GAAGjB,OAAnB;AACAC,IAAAA,UAAU,CAACgB,UAAD,CAAV;AACH,GALD,CAlCwC,CAyCxC;;;AAEA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAI;AAAEf,MAAAA,OAAF;AAAWW,MAAAA,UAAX;AAAuBE,MAAAA,KAAvB;AAA8Bf,MAAAA,OAA9B;AAAuCC,MAAAA;AAAvC,KAA/B;AAAA,cACFF;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,CA/CM;;GAAMD,a;;KAAAA,a","sourcesContent":["//contexto con las funciones y states globales que se utilizan en los distintos components.\r\n\r\nimport { createContext } from 'react/cjs/react.development';\r\nimport {useState} from 'react';\r\nimport itemsprop from '../../public/itemprop';\r\n\r\n//creación del contexto\r\nexport const CartContext = createContext();\r\n\r\nexport const ItemsProvider = ({children}) =>{\r\n    \r\n    //Creación y state del array del carrito de compras (Acá van los productos añadidos al mismo solamente)\r\n    const [carrito, setCarrito] = useState ([]);\r\n    \r\n    //Función para añadit un producto al carrito\r\n    const addItem = (newItem) =>{\r\n\r\n        const newitemcarrito = carrito.find(\r\n            (item) => \r\n                newItem.id === item.id && newItem.size === item.size && newItem.color === item.color\r\n        );\r\n\r\n        if(newitemcarrito){\r\n            newitemcarrito.cantidad = newitemcarrito.cantidad + newItem.cantidad;\r\n            newitemcarrito.precio = newItem.precio * newitemcarrito.cantidad ;\r\n        }else{\r\n            carrito.push(newItem); \r\n        }\r\n        setCarrito([...carrito]);\r\n    };\r\n\r\n\r\n    //Función para eliminar un producto del carrito\r\n\r\n    const removeItem = (newItem) =>{\r\n        const newitemcarrito = carrito.filter( \r\n            (item) => item.id !== newItem.id || (item.id === newItem.id && newItem.size !== item.size) || (item.id === newItem.id && newItem.color !== item.color)\r\n        );\r\n        setCarrito(newitemcarrito);\r\n    }\r\n\r\n    \r\n    //Función para vaciar por completo el carrito\r\n    const clear = (carrito) =>{\r\n\r\n        carrito.length = 0;\r\n        const newcarrito = carrito;\r\n        setCarrito(newcarrito);\r\n    }\r\n    \r\n    //provider con los valores que pueden ser utilizados en los demás components.\r\n    \r\n    return <CartContext.Provider value = {{ addItem, removeItem, clear, carrito, setCarrito}}>\r\n        {children}\r\n\r\n    </CartContext.Provider>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}